//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Programming/Scripts/InputSystem/InputActions/Characters/Player/UIInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @UIInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @UIInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""UIInputActions"",
    ""maps"": [
        {
            ""name"": ""UI"",
            ""id"": ""910c2c36-5814-4deb-bf07-aebaa0e32333"",
            ""actions"": [
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""c8fa15d4-1211-4d16-b4f3-1c3442cc1092"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quest"",
                    ""type"": ""Button"",
                    ""id"": ""c8d4b2a0-0803-4a86-af3d-22c48ddfb70e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Character"",
                    ""type"": ""Button"",
                    ""id"": ""eec06b05-4832-4d38-a222-97ba67d5fc5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyNumber1"",
                    ""type"": ""Button"",
                    ""id"": ""65a769f5-353e-4c88-b750-143c61d034c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyNumber2"",
                    ""type"": ""Button"",
                    ""id"": ""79ef1c6d-9b5b-4fcd-a853-e8d5ad8c53e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KeyNumber3"",
                    ""type"": ""Button"",
                    ""id"": ""e9e84733-d57a-42bb-8611-307c19bd4c2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EE"",
                    ""type"": ""Button"",
                    ""id"": ""07fce232-0992-467e-909d-cd390d736690"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""94e28be0-01bc-4dc2-b2fa-9e484d4d85e6"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c2230aa-3c09-4ea6-b86d-032f794395ee"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Quest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edb63c75-61b5-420f-8a4d-3835b0b28ed1"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Character"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c562f393-6776-4dd0-bb2d-5300486cf09b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyNumber1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6792cb65-61f0-4c30-9b2e-cc033df0884c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf997992-6f33-426c-b492-0d0bd1802958"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyNumber2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f72321ff-3367-4d6f-b016-a513ec34dc82"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyNumber3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_ESC = m_UI.FindAction("ESC", throwIfNotFound: true);
        m_UI_Quest = m_UI.FindAction("Quest", throwIfNotFound: true);
        m_UI_Character = m_UI.FindAction("Character", throwIfNotFound: true);
        m_UI_KeyNumber1 = m_UI.FindAction("KeyNumber1", throwIfNotFound: true);
        m_UI_KeyNumber2 = m_UI.FindAction("KeyNumber2", throwIfNotFound: true);
        m_UI_KeyNumber3 = m_UI.FindAction("KeyNumber3", throwIfNotFound: true);
        m_UI_EE = m_UI.FindAction("EE", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_ESC;
    private readonly InputAction m_UI_Quest;
    private readonly InputAction m_UI_Character;
    private readonly InputAction m_UI_KeyNumber1;
    private readonly InputAction m_UI_KeyNumber2;
    private readonly InputAction m_UI_KeyNumber3;
    private readonly InputAction m_UI_EE;
    public struct UIActions
    {
        private @UIInputActions m_Wrapper;
        public UIActions(@UIInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ESC => m_Wrapper.m_UI_ESC;
        public InputAction @Quest => m_Wrapper.m_UI_Quest;
        public InputAction @Character => m_Wrapper.m_UI_Character;
        public InputAction @KeyNumber1 => m_Wrapper.m_UI_KeyNumber1;
        public InputAction @KeyNumber2 => m_Wrapper.m_UI_KeyNumber2;
        public InputAction @KeyNumber3 => m_Wrapper.m_UI_KeyNumber3;
        public InputAction @EE => m_Wrapper.m_UI_EE;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @ESC.started += instance.OnESC;
            @ESC.performed += instance.OnESC;
            @ESC.canceled += instance.OnESC;
            @Quest.started += instance.OnQuest;
            @Quest.performed += instance.OnQuest;
            @Quest.canceled += instance.OnQuest;
            @Character.started += instance.OnCharacter;
            @Character.performed += instance.OnCharacter;
            @Character.canceled += instance.OnCharacter;
            @KeyNumber1.started += instance.OnKeyNumber1;
            @KeyNumber1.performed += instance.OnKeyNumber1;
            @KeyNumber1.canceled += instance.OnKeyNumber1;
            @KeyNumber2.started += instance.OnKeyNumber2;
            @KeyNumber2.performed += instance.OnKeyNumber2;
            @KeyNumber2.canceled += instance.OnKeyNumber2;
            @KeyNumber3.started += instance.OnKeyNumber3;
            @KeyNumber3.performed += instance.OnKeyNumber3;
            @KeyNumber3.canceled += instance.OnKeyNumber3;
            @EE.started += instance.OnEE;
            @EE.performed += instance.OnEE;
            @EE.canceled += instance.OnEE;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @ESC.started -= instance.OnESC;
            @ESC.performed -= instance.OnESC;
            @ESC.canceled -= instance.OnESC;
            @Quest.started -= instance.OnQuest;
            @Quest.performed -= instance.OnQuest;
            @Quest.canceled -= instance.OnQuest;
            @Character.started -= instance.OnCharacter;
            @Character.performed -= instance.OnCharacter;
            @Character.canceled -= instance.OnCharacter;
            @KeyNumber1.started -= instance.OnKeyNumber1;
            @KeyNumber1.performed -= instance.OnKeyNumber1;
            @KeyNumber1.canceled -= instance.OnKeyNumber1;
            @KeyNumber2.started -= instance.OnKeyNumber2;
            @KeyNumber2.performed -= instance.OnKeyNumber2;
            @KeyNumber2.canceled -= instance.OnKeyNumber2;
            @KeyNumber3.started -= instance.OnKeyNumber3;
            @KeyNumber3.performed -= instance.OnKeyNumber3;
            @KeyNumber3.canceled -= instance.OnKeyNumber3;
            @EE.started -= instance.OnEE;
            @EE.performed -= instance.OnEE;
            @EE.canceled -= instance.OnEE;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IUIActions
    {
        void OnESC(InputAction.CallbackContext context);
        void OnQuest(InputAction.CallbackContext context);
        void OnCharacter(InputAction.CallbackContext context);
        void OnKeyNumber1(InputAction.CallbackContext context);
        void OnKeyNumber2(InputAction.CallbackContext context);
        void OnKeyNumber3(InputAction.CallbackContext context);
        void OnEE(InputAction.CallbackContext context);
    }
}
